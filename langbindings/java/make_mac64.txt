# interfaces/java

DIST = $(APLS_RELEASE)/langbindings/java
#debug
#C_FLAGS = -g
#release
C_FLAGS = -O6

CC = gcc

all: _dirs _java _amzijni

_dirs:
	-mkdir $(DIST)
	-mkdir $(DIST)/amzi
	-mkdir $(DIST)/amzi/ls

_java: amzi/ls/LogicServer.class _java_copy

amzi/ls/LogicServer.class: amzi/ls/LogicServer.java amzi/ls/LSException.java
	javac amzi/ls/LSException.java
	javac amzi/ls/LogicServer.java

_java_copy:
	cp amzi/ls/LSException.class $(DIST)/amzi/ls/LSException.class
	cp amzi/ls/LogicServer.class $(DIST)/amzi/ls/LogicServer.class
	jar cvf amzi.jar amzi/ls/*.class
	cp amzi.jar $(DIST)/amzi.jar
	
	
_amzijni: jnilib/amzi_ls_LogicServer.h jnilib/amzi_ls_LSException.h _jnilib

jnilib/amzi_ls_LogicServer.h: amzi/ls/LogicServer.java
	javah -jni -d jnilib amzi.ls.LogicServer

jnilib/amzi_ls_LSException.h: amzi/ls/LSException.java
	javah -jni -d jnilib amzi.ls.LSException

_jnilib:
	cd jnilib; make -f make_mac64.txt
	cd ..


clean:
	-del /Q amzi\ls\*.class
	-del /Q jnilib\amzi_ls_LogicServer.h
	-del /Q jnilib\amzi_ls_LSException.h
	-del /Q jnilib\*.ncb
	-del /Q jnilib\*.pdb